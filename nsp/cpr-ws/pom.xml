<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>dk.nsi.stamdata</groupId>
    <artifactId>stamdata-parent</artifactId>
    <version>3.5.2-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <artifactId>stamdata-cpr-ws</artifactId>

  <packaging>war</packaging>

  <name>Stamdata CPR Opslag Webservices</name>

  <dependencies>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
    </dependency>

      <!-- Logging -->
      <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <scope>compile</scope> <!-- This is needed on Jboss in order for us to be able to log to a different file than server.log with log4j -->
      </dependency>
      <dependency>
          <!-- Hibernate uses slf4j logging -->
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <version>1.6.1</version>
      </dependency>

    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-multibindings</artifactId>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <dependency>
      <groupId>dk.nsi.stamdata</groupId>
      <artifactId>stamdata-common</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>dk.nsi.stamdata</groupId>
      <artifactId>stamdata-testing</artifactId>
      <version>${project.version}</version>
      <!--
       |Â HACK: Chronos does not include test deps and this is needed for 
       | the performance tests.
      -->
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hisrc.hifaces20</groupId>
      <artifactId>hifaces20-testing</artifactId>
      <version>0.1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <dependency>
      <groupId>dk.sdsd.nsp</groupId>
      <artifactId>nsp-util</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.jmeter</groupId>
      <artifactId>jmeter-api</artifactId>
      <version>2.4-2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>jaxws-maven-plugin</artifactId>
            <version>1.12</version>
            <configuration>
                <bindingFiles>
                    <bindingFile>../main/webapp/WEB-INF/wsdl/bindings.xjb.xml</bindingFile>
                </bindingFiles>
                <sourceDestDir>${project.build.directory}/generated-sources/jaxws</sourceDestDir>
                <sei/>
            </configuration>
            <executions>
                <execution>
                    <id>generate-sources-102</id>
                    <goals>
                        <goal>wsimport</goal>
                    </goals>
                    <configuration>
                        <wsdlFiles>
                            <wsdlFile>/MEDCOM_1.0.2/DetGodeCprOpslag.wsdl</wsdlFile>
                        </wsdlFiles>
                        <staleFile>${project.build.directory}/jaxws/stale/wsdl.1.done</staleFile>
                    </configuration>
                </execution>
                <execution>
                    <id>generate-sources-100</id>
                    <goals>
                        <goal>wsimport</goal>
                    </goals>
                    <configuration>
                        <!--<packageName>dk.nsi.stamdata.jaxws.generated</packageName>-->
                        <wsdlFiles>
                            <wsdlFile>/MEDCOM_1.0.0/DetGodeCprOpslag.wsdl</wsdlFile>
                        </wsdlFiles>
                        <staleFile>${project.build.directory}/jaxws/stale/wsdl.2.done</staleFile>
                    </configuration>
                </execution>
            </executions>
            <!--
             | In order to use JAX-WS 2.2, we will have to
             | change the generator version.
             | We still target 2.0 to avoid endorsing jar
             | in maven which is a real pain for Eclipse and
             | IDEA. These IDE plugins don't support it well.
             -->
            <dependencies>
                <dependency>
                    <groupId>com.sun.xml.ws</groupId>
                    <artifactId>jaxws-tools</artifactId>
                    <version>2.1.7</version>
                </dependency>
            </dependencies>
        </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>performancetest</id>
      <properties>
        <hostname>localhost</hostname>
        <port>8080</port>
        <numberOfThreads>10</numberOfThreads>
        <numberOfIterations>20</numberOfIterations>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>chronos-maven-plugin</artifactId>
            <version>1.0-SNAPSHOT</version>
            <configuration>
              <heap>768m</heap>
              <permsize>256m</permsize>
              <jmeterVariables>
                <property>
                  <name>hostname</name>
                  <value>${hostname}</value>
                </property>
                <property>
                  <name>port</name>
                  <value>${port}</value>
                </property>
                <property>
                  <name>numberOfThreads</name>
                  <value>${numberOfThreads}</value>
                </property>
                <property>
                  <name>numberOfIterations</name>
                  <value>${numberOfIterations}</value>
                </property>
              </jmeterVariables>
              <jMeterRemoteLocation>
                  http://apache.mirrors.webname.dk/jmeter/binaries/apache-jmeter-2.8.zip
              </jMeterRemoteLocation>
                <input/>
            </configuration>
            <executions>
              <!-- CPR WS StamdataPersonLookup -->
              <execution>
                <id>StamdataPersonLookup-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>jmeter</goal>
                </goals>
                <configuration>
                  <dataid>StamdataPersonLookupGetPersonDetails</dataid>
                  <input>${basedir}/src/test/jmx/StamdataPersonLookup.jmx</input>
                </configuration>
              </execution>
              <execution>
                <id>StamdataPersonLookup-report</id>
                <phase>site</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <showgc>false</showgc>
                  <showpercentile99>true</showpercentile99>
                  <reportid>StamdataPersonLookupGetPersonDetails-report</reportid>
                  <dataid>StamdataPersonLookupGetPersonDetails</dataid>
                  <description>StamdataPersonLookup, getPersonDetails
                    for single cpr Service Response Times</description>
                  <title>StamdataPersonLookup, getPersonDetails</title>
                </configuration>
              </execution>
              <!-- CPR WS StamdataPersonLookupWithSubscription -->
              <execution>
                <id>StamdataPersonLookupWithSubscription-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>jmeter</goal>
                </goals>
                <configuration>
                  <dataid>StamdataPersonLookupWithSubscriptionGetSubscribedPersonDetails</dataid>
                  <input>${basedir}/src/test/jmx/StamdataPersonLookupWithSubscription.jmx</input>
                </configuration>
              </execution>
              <execution>
                <id>StamdataPersonLookupWithSubscription-report</id>
                <phase>site</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <showgc>false</showgc>
                  <showpercentile99>true</showpercentile99>
                  <reportid>StamdataPersonLookupWithSubscriptionGetSubscribedPersonDetails-report</reportid>
                  <dataid>StamdataPersonLookupWithSubscriptionGetSubscribedPersonDetails</dataid>
                  <description>StamdataPersonLookupWithSubscription,
                    getSubscribedPersonDetails Service Response
                    Times
                  </description>
                  <title>StamdataPersonLookup,
                    getSubscribedPersonDetails</title>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
